/*
* generated by Xtext
*/
package org.yazgel.hibernatedsl.xtext.ui.quickfix

import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.xtext.validation.Issue

import static extension org.eclipse.xtext.EcoreUtil2.*
import org.eclipse.xtext.diagnostics.Diagnostic
import org.yazgel.hibernatedsl.xtext.validation.HibernateValidator
import org.yazgel.hibernate.Module
import org.yazgel.hibernate.Entity
import org.yazgel.hibernate.Reference
import org.yazgel.hibernate.DataType
import org.yazgel.hibernate.Package
import org.yazgel.hibernate.HibernateFactory

/**
 * Custom quickfixes.
 *
 * see http://www.eclipse.org/Xtext/documentation.html#quickfixes
 */
class HibernateQuickfixProvider extends org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider {

	@Fix(HibernateValidator::INVALID_MODULE_NAME)
	def void lowerCaseModuleName(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
			issue,
			"Lowercase all letters", // label
			"Lowercase all letters'", // description
			"Module.gif", // icon
			[ element, context |
				(element as Module).name = issue.data.get(0).toLowerCase
			]
		);
	}

	@Fix(HibernateValidator::INVALID_PACKAGE_NAME)
	def void lowerCasePackageName(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
			issue,
			"Lowercase all letters", // label
			"Lowercase all letters'", // description
			"Package.gif", // icon
			[ element, context |
				(element as Package).name = issue.data.get(0).toLowerCase
			]
		);
	}

	@Fix(HibernateValidator::HIERARCHY_CYCLE)
	def void removeSuperType(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
			issue,
			"Remove super entity",
			'''Remove super entity '«issue.data.get(0)»' ''',
			"delete_obj.gif",
			[ element, context |
				(element as Entity).superEntity = null;
			]
		);
	}

	@Fix(HibernateValidator::INVALID_ENTITY_NAME)
	def void capitalizeEntityNameFirstLetter(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
			issue,
			"Capitalize first letter", // label
			"Capitalize first letter of '" + issue.data.get(0) + "'", // description
			"Entity.gif", // icon
			[ element, context |
				(element as Entity).name = issue.data.get(0).toFirstUpper
			]
		);
	}

	@Fix(HibernateValidator::INVALID_REFERENCE_NAME)
	def void uncapitalizeReferenceNameFirstLetter(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
			issue,
			"Uncapitalize first letter", // label
			"Uncapitalize first letter of '" + issue.data.get(0) + "'", // description
			"Reference.gif", // icon
			[ element, context |
				(element as Reference).name = issue.data.get(0).toFirstLower
			]
		);
	}

	@Fix(HibernateValidator::INVALID_DATATYPE_NAME)
	def void uncapitalizeDataTypeNameFirstLetter(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
			issue,
			"Uncapitalize first letter", // label
			"Uncapitalize first letter of '" + issue.data.get(0) + "'", // description
			"Datatype.gif", // icon
			[ element, context |
				(element as DataType).name = issue.data.get(0).toFirstLower
			]
		);
	}

	@Fix(Diagnostic::LINKING_DIAGNOSTIC)
	def void createMissingEntity(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
			issue,
			"Create missing entity",
			"Create missing entity",
			"Entity.gif",
			[ element, context |
				val currentEntity = element.getContainerOfType(typeof(Entity))
				val model = currentEntity.eContainer as Package
				model.entities.add(
					model.entities.indexOf(currentEntity) + 1,
					HibernateFactory::eINSTANCE.createEntity() => [
						name = context.xtextDocument.get(issue.offset, issue.length)
					]
				)
			]
		);
	}
}
